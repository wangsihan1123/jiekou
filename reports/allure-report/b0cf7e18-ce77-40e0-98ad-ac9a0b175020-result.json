{"name": "插件管理-获取系统内置插件图标组", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'resp' referenced before assignment", "trace": "datas = {'case_id': 'TC017', 'data': '{}', 'expected': '{\"status_code\":200}', 'extractor': None, ...}\na_login = {'cookie': 'FULONGTECH_SESSION=858bee6a-4463-416e-a389-a9abb1786b3a'}\n\n    @allure.title(\"插件管理-查询用户默认场景\")\n    @pytest.mark.parametrize('datas', excel_datas)\n    def test_01_workspace_mnt(datas, a_login):\n        \"\"\"插件管理-查询用户默认场景\"\"\"\n        datas = json.dumps(datas)\n    \n        if '#now_time_stamp#' in datas:\n            datas = datas.replace('#now_time_stamp#', str(Handler.now_time_stamp))\n    \n        # 替换\n        datas = Handler.replace_data(datas)\n        # 转化成字典\n        datas = json.loads(datas)\n    \n        allure.dynamic.title(datas[\"title\"])\n        allure.dynamic.description(\"测试{}接口.\".format(datas[\"title\"]))\n    \n        headers = json.loads(datas[\"headers\"])\n        headers[\"Cookie\"] = a_login[\"cookie\"]\n    \n        with allure.step('请求方式'):\n            allure.attach('{}'.format(datas[\"method\"]), name='{}请求方式'.format(datas[\"title\"]))\n    \n        with allure.step('请求路径'):\n            allure.attach('{}'.format(datas[\"path\"]), name='{}请求路径'.format(datas[\"title\"]))\n    \n        with allure.step('请求体'):\n            allure.attach('{}'.format(datas[\"data\"]), name='{}请求体'.format(datas[\"title\"]))\n        logger.info(\"{}请求路径为:{},请求体为:{}\".format(datas[\"title\"], datas[\"path\"], datas[\"data\"]))\n    \n        files = json.loads(datas[\"files\"])\n        if \"上传\" in datas[\"title\"]:\n            files = [\n                (\"pmIconFile\", (\n                    files[0][\"file_name\"],\n                    open(Handler.upload_files_path + files[0][\"file_path\"], \"rb\"),\n                    files[0][\"content_type\"]\n                )),\n                (\"pdIconFile\", (\n                    files[1][\"file_name\"],\n                    open(Handler.upload_files_path + files[1][\"file_path\"], \"rb\"),\n                    files[1][\"content_type\"],\n                ))\n            ]\n            try:\n                resp = requests.request(method=datas[\"method\"],\n                                        url=Handler.env_config[\"env_url\"] + datas[\"path\"],\n                                        headers=headers,\n                                        files=files,\n                                        data=json.loads(datas[\"data\"]),\n                                        json=json.loads(datas[\"json\"]),\n                                        verify=False)\n            except requests.exceptions.RequestException as e:\n                logger.error(\"发出请求时出错: {}\".format(e))\n                raise e\n    \n        with allure.step('响应'):\n>           allure.attach('{}'.format(resp.status_code), name='状态码')\nE           UnboundLocalError: local variable 'resp' referenced before assignment\n\ntests\\test_01_workspace_mnt.py:73: UnboundLocalError"}, "description": "测试插件管理-获取系统内置插件图标组接口.", "steps": [{"name": "请求方式", "status": "passed", "attachments": [{"name": "插件管理-获取系统内置插件图标组请求方式", "source": "c141f4c1-b100-4633-b5ab-d08ecb85834e-attachment.attach"}], "start": 1704158444106, "stop": 1704158444106}, {"name": "请求路径", "status": "passed", "attachments": [{"name": "插件管理-获取系统内置插件图标组请求路径", "source": "291b9dda-71c7-4b43-b4f9-a88aab98ad9e-attachment.attach"}], "start": 1704158444106, "stop": 1704158444107}, {"name": "请求体", "status": "passed", "attachments": [{"name": "插件管理-获取系统内置插件图标组请求体", "source": "6e2510de-9a42-4cc3-a6fa-1a85843b639c-attachment.attach"}], "start": 1704158444107, "stop": 1704158444107}, {"name": "响应", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'resp' referenced before assignment\n", "trace": "  File \"D:\\D\\api_auto_test\\api_auto_test\\tests\\test_01_workspace_mnt.py\", line 73, in test_01_workspace_mnt\n    allure.attach('{}'.format(resp.status_code), name='状态码')\n"}, "start": 1704158444107, "stop": 1704158444107}], "attachments": [{"name": "stderr", "source": "35e85bce-4c79-480b-b988-e95430359823-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "datas", "value": "{'case_id': 'TC017', 'title': '插件管理-获取系统内置插件图标组', 'headers': '{}', 'path': '/OneHit/plugin/internal/icon', 'method': 'get', 'files': '{}', 'data': '{}', 'expected': '{\"status_code\":200}', 'extractor': None}"}], "start": 1704158444105, "stop": 1704158444108, "uuid": "58a5ed8e-31ff-4451-b898-881b30998ad4", "historyId": "ce6e954d836cffe5a4228fab251c3f2e", "testCaseId": "4dce2d0bd632021e913ac9a6b569902a", "fullName": "tests.test_01_workspace_mnt#test_01_workspace_mnt", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_01_workspace_mnt"}, {"name": "host", "value": "wangsihan-PC"}, {"name": "thread", "value": "19736-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_01_workspace_mnt"}]}