{"name": "插件管理-更新插件数据", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "datas = {'case_id': 'TC003', 'data': '{}', 'expected': '{\"status_code\":200}', 'extractor': None, ...}\na_login = {'cookie': 'FULONGTECH_SESSION=8ebbc637-3bf3-4c68-9456-ea9b5b8274a8'}\n\n    @allure.title(\"插件管理-查询用户默认场景\")\n    @pytest.mark.parametrize('datas', excel_datas)\n    def test_01_workspace_mnt(datas, a_login):\n        \"\"\"插件管理-查询用户默认场景\"\"\"\n        datas = json.dumps(datas)\n    \n        if '#now_time_stamp#' in datas:\n            datas = datas.replace('#now_time_stamp#', str(Handler.now_time_stamp))\n    \n        # 替换\n        datas = Handler.replace_data(datas)\n        # 转化成字典\n        datas = json.loads(datas)\n    \n        allure.dynamic.title(datas[\"title\"])\n        allure.dynamic.description(\"测试{}接口.\".format(datas[\"title\"]))\n    \n        headers = json.loads(datas[\"headers\"])\n        headers[\"Cookie\"] = a_login[\"cookie\"]\n    \n        with allure.step('请求方式'):\n            allure.attach('{}'.format(datas[\"method\"]), name='{}请求方式'.format(datas[\"title\"]))\n    \n        with allure.step('请求路径'):\n            allure.attach('{}'.format(datas[\"path\"]), name='{}请求路径'.format(datas[\"title\"]))\n    \n        with allure.step('请求体'):\n            allure.attach('{}'.format(datas[\"data\"]), name='{}请求体'.format(datas[\"title\"]))\n        logger.info(\"{}请求路径为:{},请求体为:{}\".format(datas[\"title\"], datas[\"path\"], datas[\"data\"]))\n    \n        files = json.loads(datas[\"files\"])\n        if \"上传\" in datas[\"title\"]:\n            files = [\n                (\"pmIconFile\", (\n                    files[0][\"file_name\"],\n                    open(Handler.upload_files_path + files[0][\"file_path\"], \"rb\"),\n                    files[0][\"content_type\"]\n                )),\n                (\"pdIconFile\", (\n                    files[1][\"file_name\"],\n                    open(Handler.upload_files_path + files[1][\"file_path\"], \"rb\"),\n                    files[1][\"content_type\"],\n                ))\n            ]\n    \n        try:\n            resp = requests.request(method=datas[\"method\"],\n                                    url=Handler.env_config[\"env_url\"] + datas[\"path\"],\n                                    headers=headers,\n                                    files=files,\n                                    data=json.loads(datas[\"data\"]),\n                                    json=json.loads(datas[\"json\"]),\n                                    verify=False)\n        except requests.exceptions.RequestException as e:\n            logger.error(\"发出请求时出错: {}\".format(e))\n            raise e\n    \n        with allure.step('响应'):\n            allure.attach('{}'.format(resp.status_code), name='状态码')\n        logger.info(\"{}状态码：{}，响应结果:{}\".format(datas[\"title\"], resp.status_code, resp.text))\n        # logger.info(\"{}状态码：{}，响应结果:{}\".format(datas[\"title\"], resp.status_code, resp.json()))\n    \n        expected = json.loads(datas['expected'])\n        # 状态码断言\n        with allure.step('断言'):\n            for key, value in expected.items():\n>               assert resp.status_code == value\nE               assert 404 == 200\nE                +  where 404 = <Response [404]>.status_code\n\ntests\\test_01_workspace_mnt.py:82: AssertionError"}, "description": "测试插件管理-更新插件数据接口.", "steps": [{"name": "请求方式", "status": "passed", "attachments": [{"name": "插件管理-更新插件数据请求方式", "source": "aa795453-cd46-470d-8693-a65d75cf603d-attachment.attach"}], "start": 1704247837274, "stop": 1704247837274}, {"name": "请求路径", "status": "passed", "attachments": [{"name": "插件管理-更新插件数据请求路径", "source": "b758301c-5948-4bc8-baef-388d0aec53ad-attachment.attach"}], "start": 1704247837274, "stop": 1704247837275}, {"name": "请求体", "status": "passed", "attachments": [{"name": "插件管理-更新插件数据请求体", "source": "54c4aba3-338b-47a2-b63a-8b0f8a714d44-attachment.attach"}], "start": 1704247837275, "stop": 1704247837275}, {"name": "响应", "status": "passed", "attachments": [{"name": "状态码", "source": "3ade144b-0e21-4b3d-9635-db0cbf630ee0-attachment.attach"}], "start": 1704247837303, "stop": 1704247837304}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"D:\\D\\api_auto_test\\api_auto_test\\tests\\test_01_workspace_mnt.py\", line 82, in test_01_workspace_mnt\n    assert resp.status_code == value\n"}, "start": 1704247837304, "stop": 1704247837304}], "attachments": [{"name": "stderr", "source": "2a90634a-9e32-4013-b3be-98180d1e2fce-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "datas", "value": "{'case_id': 'TC003', 'title': '插件管理-更新插件数据', 'headers': '{}', 'path': '/OneHit/plugin', 'method': 'put', 'files': '{}', 'json': '{\"id\":\"#uuid#\",\"name\":\"8899\",\"businessType\":\"自定义\",\"iconGroup\":\"plugin_icon_2\",\"pmIcon\":\"pm_icon_2.svg\",\"pdIcon\":\"pd_icon_1.svg\",\"description\":\"222222\" }', 'data': '{}', 'expected': '{\"status_code\":200}', 'extractor': None}"}], "start": 1704247837273, "stop": 1704247837305, "uuid": "df9a1562-1055-4e93-9972-883c5f48bb13", "historyId": "691578179462decc9d962872aee728f2", "testCaseId": "4dce2d0bd632021e913ac9a6b569902a", "fullName": "tests.test_01_workspace_mnt#test_01_workspace_mnt", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_01_workspace_mnt"}, {"name": "host", "value": "wangsihan-PC"}, {"name": "thread", "value": "24568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_01_workspace_mnt"}]}