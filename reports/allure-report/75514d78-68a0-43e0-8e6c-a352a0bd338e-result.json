{"name": "插件管理-上传4-新增自定义插件-类型为空", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code", "trace": "datas = {'case_id': 'TC005', 'data': '{}', 'expected': '{\"status_code\":400}', 'extractor': None, ...}\na_login = {'cookie': 'FULONGTECH_SESSION=e9e40bc9-8d67-4e13-aac8-c8abe1ad24d7'}\n\n    @allure.title(\"插件管理-查询用户默认场景\")\n    @pytest.mark.parametrize('datas', excel_datas)\n    def test_01_workspace_mnt(datas, a_login):\n        \"\"\"插件管理-查询用户默认场景\"\"\"\n        datas = json.dumps(datas)\n    \n        if '#now_time_stamp#' in datas:\n            datas = datas.replace('#now_time_stamp#', str(Handler.now_time_stamp))\n    \n        # 替换\n        datas = Handler.replace_data(datas)\n        # 转化成字典\n        datas = json.loads(datas)\n    \n        allure.dynamic.title(datas[\"title\"])\n        allure.dynamic.description(\"测试{}接口.\".format(datas[\"title\"]))\n    \n        headers = json.loads(datas[\"headers\"])\n        headers[\"Cookie\"] = a_login[\"cookie\"]\n    \n        with allure.step('请求方式'):\n            allure.attach('{}'.format(datas[\"method\"]), name='{}请求方式'.format(datas[\"title\"]))\n    \n        with allure.step('请求路径'):\n            allure.attach('{}'.format(datas[\"path\"]), name='{}请求路径'.format(datas[\"title\"]))\n    \n        with allure.step('请求体'):\n            allure.attach('{}'.format(datas[\"data\"]), name='{}请求体'.format(datas[\"title\"]))\n        logger.info(\"{}请求路径为:{},请求体为:{}\".format(datas[\"title\"], datas[\"path\"], datas[\"data\"]))\n    \n        files = json.loads(datas[\"files\"])\n        if \"上传2\" in datas[\"title\"]:\n            files = [\n                (\"pmIconFile\", (\n                    files[0][\"file_name\"],\n                    open(Handler.upload_files_path + files[0][\"file_path\"], \"rb\"),\n                    files[0][\"content_type\"]\n                )),\n                (\"pdIconFile\", (\n                    files[1][\"file_name\"],\n                    open(Handler.upload_files_path + files[1][\"file_path\"], \"rb\"),\n                    files[1][\"content_type\"],\n                ))\n            ]\n        elif \"上传1\" in datas[\"title\"]:\n            files = {\"file\": (\n                files[\"file_name\"], open(Handler.upload_files_path + files[\"file_path\"], \"rb\"), files[\"content_type\"])}\n        try:\n            resp = requests.request(method=datas[\"method\"],\n                                    url=Handler.env_config[\"env_url\"] + datas[\"path\"],\n                                    headers=headers,\n                                    files=files,\n                                    data=json.loads(datas[\"data\"]),\n                                    json=json.loads(datas[\"json\"]),\n                                    verify=False)\n        except requests.exceptions.RequestException as e:\n            logger.error(\"发出请求时出错: {}\".format(e))\n            raise e\n    \n        with allure.step('响应'):\n            allure.attach('{}'.format(resp.status_code), name='状态码')\n        logger.info(\"{}状态码：{}，响应结果:{}\".format(datas[\"title\"], resp.status_code, resp.text))\n        # logger.info(\"{}状态码：{}，响应结果:{}\".format(datas[\"title\"], resp.status_code, resp.json()))\n    \n        expected = json.loads(datas['expected'])\n        # 状态码断言\n        with allure.step('断言'):\n            for key, value in expected.items():\n>               assert resp.status_code == value\nE               assert 500 == 400\nE                +  where 500 = <Response [500]>.status_code\n\ntests\\test_01_workspace_mnt.py:84: AssertionError"}, "description": "测试插件管理-上传4-新增自定义插件-类型为空接口.", "steps": [{"name": "请求方式", "status": "passed", "attachments": [{"name": "插件管理-上传4-新增自定义插件-类型为空请求方式", "source": "2c0387bb-1461-4a77-875e-45169e5f85df-attachment.attach"}], "start": 1704769415594, "stop": 1704769415595}, {"name": "请求路径", "status": "passed", "attachments": [{"name": "插件管理-上传4-新增自定义插件-类型为空请求路径", "source": "9212ab58-3f52-4f23-b197-bc973eb725e1-attachment.attach"}], "start": 1704769415595, "stop": 1704769415595}, {"name": "请求体", "status": "passed", "attachments": [{"name": "插件管理-上传4-新增自定义插件-类型为空请求体", "source": "bcadf2e1-8bd2-459a-8481-ce0156db06e7-attachment.attach"}], "start": 1704769415595, "stop": 1704769415596}, {"name": "响应", "status": "passed", "attachments": [{"name": "状态码", "source": "4567f497-7f47-4020-b249-998d2c53f5d2-attachment.attach"}], "start": 1704769415634, "stop": 1704769415635}, {"name": "断言", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n", "trace": "  File \"D:\\D\\api_auto_test\\api_auto_test\\tests\\test_01_workspace_mnt.py\", line 84, in test_01_workspace_mnt\n    assert resp.status_code == value\n"}, "start": 1704769415635, "stop": 1704769415635}], "attachments": [{"name": "stderr", "source": "56400cd8-0c6a-4222-9411-82587816d5d5-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "datas", "value": "{'case_id': 'TC005', 'title': '插件管理-上传4-新增自定义插件-类型为空', 'headers': '{}', 'path': '/OneHit/plugin', 'method': 'post', 'files': '{\"file_name\":\"xinjian_chajian_nullbusinessType.JSON\",\"file_path\":\"/xinjian_chajian_nullbusinessType.JSON\",\"content_type\":\"application/json\"}', 'data': '{}', 'json': '{}', 'expected': '{\"status_code\":400}', 'extractor': None}"}], "start": 1704769415594, "stop": 1704769415636, "uuid": "d7ee7c6b-4933-4111-9163-edad17d11c36", "historyId": "7e96d475955821b97388ec42aaa68d16", "testCaseId": "4dce2d0bd632021e913ac9a6b569902a", "fullName": "tests.test_01_workspace_mnt#test_01_workspace_mnt", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_01_workspace_mnt"}, {"name": "host", "value": "wangsihan-PC"}, {"name": "thread", "value": "37396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_01_workspace_mnt"}]}